// GRID SYSTEM
// ----------------------------
@mixin guttered( $gutter: $grid__gutter-width ) {
	padding-left: unitcalc( $gutter / 2 );
	padding-right: unitcalc( $gutter / 2 );
}

// Centered container element

// use this if you want to nest a row for the first column divisions
@mixin container( $gutter: $grid__gutter-width, $width: $grid__width ) {
	@include guttered( $gutter );
	max-width: unitcalc( $width );
}

@mixin container--centered {
	margin-left: auto;
	margin-right: auto;
}

@mixin container--left {
	margin-left: 0;
	margin-right: auto;
}

@mixin container--right {
	margin-right: 0;
	margin-left: auto;
}

@mixin row( $gutter: $grid__gutter-width ) {
	margin-left: unitcalc( $gutter / -2 );
	margin-right: unitcalc( $gutter / -2 );
//	@include clearfix;
//	@supports (display: flex) {
//		display: flex;
//		flex-wrap: wrap;
//	}
	@include clearfix;
	display: flex;
	flex-wrap: wrap;
}

@mixin column( $gutter: $grid__gutter-width ) {
	@include guttered( $gutter );
	position: relative;
//	float: left;
//	min-height: 1px;
//
//	@supports (display: flex ) {
//		flex: 0 0 auto;
//	}
	float: left;
	flex: 1;
}

@mixin columns( $n, $columns: $grid__columns ) {
//	width: percentage( $n / $columns );
//
//	@supports (display: flex ) {
//		width: auto;
//		flex: 0 0 percentage( $n / $columns );
//	}
	max-width: percentage( $n / $columns );
	flex: 0 0 percentage( $n / $columns );
}

@mixin push( $offset: 1, $columns: $grid__columns ) {
	margin-left: percentage( $offset / $columns );
}

@mixin pull( $offset: 1, $columns: $grid__columns ) {
	margin-right: percentage( $offset / $columns );
}

@mixin row-centerned() {
	justify-content: center;
}

@mixin column--centered {
	float: none;
	margin-left: auto;
	margin-right: auto;
	clear: both;
}

@mixin uncolumn {
	float: none;
	width: auto;
	padding-left: initial;
	padding-right: initial;
}

@mixin unpush {
	margin-left: inherit;
}

@mixin unpull {
	margin-right: inherit;
}

@mixin generate-column-classes( $columns: $grid__columns, $selector: '.columns', $i: 1 ) {
	@while $i <= $columns {
		#{$selector}--#{$i} {
			@include columns( $i, $columns );
		}
		$i: $i + 1;
	}
}

@mixin generate-push-classes( $columns: $grid__columns, $selector: '.push', $i: 1 ) {
	@while $i <= $columns {
		#{$selector}--#{$i} {
			@include push( $i, $columns );
		}
		$i: $i + 1;
	}
}

@mixin generate-pull-classes( $columns: $grid__columns, $selector: '.pull', $i: 1 ) {
	@while $i <= $columns {
		#{$selector}--#{$i} {
			@include pull( $i, $columns );
		}
		$i: $i + 1;
	}
}

@mixin generate-block-grid-classes($n, $parent-selector: '.block-grid', $child_selector: '.column', $i: 1) {
	@while $i <= $n {
		#{$parent-selector}-#{$i} {

			& > #{$child-selector} {
				width: percentage(1 / $i);

				@supports (display: flex ) {
					//width: auto;
					flex: 0 0 percentage( 1 / $i );
				}

				&:nth-of-type(n) {
					clear: none;
				}

				&:nth-of-type(#{$i}n+1) {
					clear: both;
				}
			}
		}
		$i: $i + 1;
	}
}
