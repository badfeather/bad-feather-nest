// GRID SYSTEM
// ----------------------------
@mixin guttered($gutter: $grid__gutter-width-emcalc) {
	padding-left: $gutter / 2;
	padding-right: $gutter / 2;
}

// Centered container element
@mixin container($gutter: $grid__gutter-width-emcalc, $width: $grid__width-emcalc) {
	@include guttered($gutter);
	max-width: $width;
	@include clearfix;
}

@mixin container--centered {
	margin-left: auto;
	margin-right: auto;
}

@mixin container--left {
	margin-left: 0;
	margin-right: auto;
}

@mixin container--right {
	margin-right: 0;
	margin-left: auto;
}

@mixin row($gutter: $grid__gutter-width-emcalc) {
	margin-left: $gutter / -2;
	margin-right: $gutter / -2;
	@include clearfix;
}

@mixin column($gutter: $grid__gutter-width-emcalc) {
	@include guttered($gutter);
	position: relative;
	float: left;
	min-height: 1px;
}

@mixin columns($n, $columns: $grid__columns) {
  width: percentage($n / $columns);
}

@mixin push($offset: 1, $columns: $grid__columns) {
	margin-left: percentage($offset / $columns);
}

@mixin pull($offset: 1, $columns: $grid__columns) {
	margin-right: percentage($offset / $columns);
}

@mixin column--centered {
	float: none;
	margin-left: auto;
	margin-right: auto;
	clear: both;
}

@mixin uncolumn {
	float: none;
	width: auto;
	padding-left: initial;
	padding-right: initial;
}

@mixin unpush {
	margin-left: inherit;
}

@mixin unpull {
	margin-right: inherit;
}

@mixin generate-column-classes($n, $selector: '.columns', $i: 1) {
  @while $i <= $n {
    #{$selector}-#{$i} {
      width: ($i * 100% / $n);
    }
    $i: $i + 1;
  }
}

@mixin generate-push-classes($n, $selector: '.push', $i: 1) {
  @while $i <= $n {
    #{$selector}-#{$i} {
      margin-left: ($i * 100% / $n);
    }
    $i: $i + 1;
  }
}

@mixin generate-pull-classes($n, $selector: '.pull', $i: 1) {
  @while $i <= $n {
    #{$selector}-#{$i} {
      margin-right: ($i * 100% / $n);
    }
    $i: $i + 1;
  }
}

@mixin generate-block-grid-classes($n, $parent-selector: '.block-grid', $child_selector: '.column', $i: 1) {
  @while $i <= $n {
    #{$parent-selector}-#{$i} {
      & > #{$child-selector} {
  			width: percentage(1 / $i);
  			&:nth-of-type(n) {
  				clear: none;
  			}
  			&:nth-of-type(#{$i}n+1) {
  				clear: both;
  			}
      }
    }
    $i: $i + 1;
  }
}
